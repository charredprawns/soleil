{"version":3,"sources":["pages/index.js","components/Theme/themes/conformity.js","components/Theme/themes/correct.js","components/Theme/makeTheme.js","components/Theme/index.js","components/Navbar/DesktopNavbar/index.js","components/Navbar/DesktopNavbar/style.js","components/Navbar/MobileNavbar/index.js","components/Navbar/MobileNavbar/style.js","components/Navbar/index.js","components/PersonFeature/index.js","components/PersonFeature/styles.js","components/index.js","assets/flower.png","pages lazy /^/.//.*$/ groupOptions: {} namespace object","App.js","serviceWorker.js","index.js"],"names":["name","path","Primary","Secondary","Black","White","desktop","tablet","mobile","Accent","AppBackground","AppBackgroundColor","AppText","AppTextSecondary","AppBorder","AppBorderSecondary","BixOutlineStageOne","BixOutlineStageTwo","BixOutlineStageThree","BixFillStageOne","BixFillStageTwo","BixFillStageThree","CardBackground","CardBackgroundColor","CardBackgroundSecondary","CardText","CardTextSecondary","CardBorder","CardBorderSecondary","NavLogo","NavBackgroundStageOne","NavBackgroundStageTwo","NavBackgroundStageThree","NavColor","NavActive","NavIconStageTwo","NavInactive","NotificationColor","NotificationText","ErrorColor","ErrorText","SuccessColor","SuccessText","Paper","PricePositive","PriceNegative","VeryFaintPrimary","NameColors","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","breakpoints","sm","md","lg","xl","xs","navHeights","themeName","screenSize","navHeight","createMuiTheme","maxContentWidth","mobileThreshold","tabletThreshold","bodyHeight","bodyWithNavHeight","topNotchHeight","bottomNotchHeight","palette","primary","main","themes","secondary","overrides","undefined","MuiButton","containedSecondary","color","textTransform","values","typography","useNextVariants","Theme","children","isMobile","useMediaQuery","isTablet","isDesktop","useState","makeTheme","muiTheme","setMuiTheme","useEffect","theme","ThemeProvider","withStyles","root","background","list","width","classes","open","setOpen","toggleDrawer","isOpen","event","type","key","AppBar","Toolbar","IconButton","onClick","Drawer","onClose","className","role","onKeyDown","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","Divider","ManagerTemplate","props","useTheme","up","PersonFeature","shouldSpin","container","src","mainImage","main_image","alt","Typography","variant","defaultProps","display","flexDirection","placeItems","margin","animation","console","log","marginRight","from","transform","to","module","exports","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","pages","pageSpecs","spec","Component","lazy","App","fallback","page","component","exact","isSubRouter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.887ad694.chunk.js","sourcesContent":["export default [\n  {\n    name: 'Home',\n    path: '/home'\n  }\n]\n","export default {\n  Primary: '#fb8c00',\n  Secondary: '#00796b',\n  Black: '#000000',\n  White: '#FFFFFF',\n  desktop: {},\n  tablet: {\n    // Values for the above colors that are to be set ONLY on desktop\n  },\n  mobile: {\n    // Values for the above colors that are to be set ONLY on desktop\n  }\n}\n","export default {\n  Primary: '#15EB83',\n  Secondary: '#0ABA65',\n  Accent: '#EB15B6',\n  AppBackground: 'linear-gradient(180deg, #ffffff 0%, #ffffff 100%)',\n  AppBackgroundColor: '#FFFFFF',\n  AppText: '#15EB83',\n  AppTextSecondary: '#0ABA65',\n  AppBorder: '#EEF2F0',\n  AppBorderSecondary: '#EEF2F0',\n  BixOutlineStageOne: '#0ABA65',\n  BixOutlineStageTwo: '#FFFFFF',\n  BixOutlineStageThree: '#FFFFFF',\n  BixFillStageOne: '#15EB83',\n  BixFillStageTwo: '#15EB83',\n  BixFillStageThree: '#15EB83',\n  CardBackground: '#FFFFFF',\n  CardBackgroundColor: '#FFFFFF',\n  CardBackgroundSecondary: 'rgba(0, 0, 0, 0.05)',\n  CardText: '#191919',\n  CardTextSecondary: '#979797',\n  CardBorder: '#EEF2F0',\n  CardBorderSecondary: '#EEF2F0',\n  NavLogo: '#15EB83',\n  NavBackgroundStageOne: '#FFFFFF',\n  NavBackgroundStageTwo: '#FFFFFF',\n  NavBackgroundStageThree: '#FFFFFF',\n  NavColor: '#0ABA65',\n  NavActive: '#0ABA65',\n  NavIconStageTwo: '#0ABA65',\n  NavInactive: '#979797',\n  NotificationColor: '#15EB83',\n  NotificationText: '#757575',\n  ErrorColor: '#FF0000',\n  ErrorText: '#FFFFFF',\n  SuccessColor: '#00FF00',\n  SuccessText: '#FFFFFF',\n  Paper: '#FCFCFC',\n  PricePositive: '#0ABA65',\n  PriceNegative: '#FF0000',\n  VeryFaintPrimary: '#F9FFFC',\n  desktop: {\n    // Values for the above colors that are to be set ONLY on desktop\n    // What if we need a value on desktop, but not on mobile?\n    AppBackground: '#FFFFFF',\n    AppBackgroundColor: '#FFFFFF',\n    AppText: '#191919',\n    AppTextSecondary: '#979797'\n  },\n  tablet: {\n    // Values for the above colors that are to be set ONLY on desktop\n  },\n  mobile: {\n    // Values for the above colors that are to be set ONLY on desktop\n  },\n  NameColors: {\n    A: '#53B805',\n    B: '#FA4F05',\n    C: '#D33C3C',\n    D: '#9D73DF',\n    E: '#39E4FB',\n    F: '#69A1ED',\n    G: '#FA8905',\n    H: '#31EC7B',\n    I: '#FF6A6A',\n    J: '#FB39D6',\n    K: '#CD7EFE',\n    L: '#41A66F',\n    M: '#6459E5',\n    N: '#41A66F',\n    O: '#CD7EFE',\n    P: '#FB39D6',\n    Q: '#FF6A6A',\n    R: '#31EC7B',\n    S: '#FA8905',\n    T: '#69A1ED',\n    U: '#39E4FB',\n    V: '#9D73DF',\n    W: '#D33C3C',\n    X: '#FA4F05',\n    Y: '#53B805',\n    Z: '#6459E5'\n  }\n}\n","import * as themes from './themes'\nimport { createMuiTheme } from '@material-ui/core'\n\n// Constants that can be changed to take affect everywhere\nconst breakpoints = {\n  sm: 709,\n  md: 969,\n  lg: 1280,\n  xl: 1920,\n  xs: 400\n}\nconst navHeights = {\n  mobile: '2.75em',\n  tablet: '2.75em',\n  desktop: '3.5em'\n}\n\n/**\n@param {screenSize} String: Used to override colors based on the size of the screen i.e. mobile, tablet, desktop\n@param {themeName} String: The string name of the theme. i.e. 'conformity' for the v1\n*/\nexport default ({ themeName, screenSize }) => {\n  const navHeight = navHeights[screenSize]\n  return createMuiTheme({\n    mobile: `@media only screen and (max-width: ${breakpoints.sm}px)`,\n    tablet: `@media only screen and (max-width: ${breakpoints.md}px)`,\n    maxContentWidth: '1440px',\n    mobileThreshold: breakpoints.sm,\n    tabletThreshold: breakpoints.md,\n    bodyHeight:\n      'calc(100vh - ' +\n      navHeight +\n      ' - env(safe-area-inset-top) - env(safe-area-inset-bottom))',\n    bodyWithNavHeight:\n      'calc(100vh - env(safe-area-inset-top) - env(safe-area-inset-bottom))',\n    topNotchHeight: 'env(safe-area-inset-top)',\n    bottomNotchHeight: 'env(safe-area-inset-bottom)',\n    navHeight,\n    palette: {\n      // Get the colors based off of the theme\n      primary: {\n        main: themes[themeName][screenSize].Primary\n          ? themes[themeName][screenSize].Primary\n          : themes[themeName].Primary\n      },\n      secondary: {\n        main: themes[themeName][screenSize].Secondary\n          ? themes[themeName][screenSize].Secondary\n          : themes[themeName].Secondary\n      }\n    },\n    overrides: {\n      ...themes[themeName],\n      ...themes[themeName][screenSize],\n      desktop: undefined,\n      tablet: undefined,\n      mobile: undefined,\n      screenSize,\n      MuiButton: {\n        containedSecondary: {\n          color: 'white',\n          textTransform: 'capitalize'\n        }\n      }\n    },\n    breakpoints: {\n      values: breakpoints\n    },\n    typography: { useNextVariants: true }\n  })\n}\n","import React, { useState, useEffect } from 'react'\nimport { MuiThemeProvider, useMediaQuery } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/styles'\nimport PropTypes from 'prop-types'\nimport makeTheme from './makeTheme'\n\n// TODO: Changing this variable should update the theme. Move into redux\nconst theme = 'conformity'\n\nconst Theme = ({ children }) => {\n  const isMobile = useMediaQuery('@media only screen and (max-width: 709px)')\n  const isTablet = useMediaQuery(\n    '@media only screen and (max-width: 969px) and (min-width: 709px)'\n  )\n  const isDesktop = useMediaQuery('@media only screen and (min-width: 969px)')\n  const [muiTheme, setMuiTheme] = useState(\n    makeTheme({\n      themeName: theme,\n      screenSize: isDesktop ? 'desktop' : isTablet ? 'tablet' : 'mobile'\n    })\n  )\n\n  // Recreate the theme with new colors when screen size changes\n  useEffect(() => {\n    setMuiTheme(\n      makeTheme({\n        themeName: theme,\n        screenSize: isDesktop ? 'desktop' : isTablet ? 'tablet' : 'mobile'\n      })\n    )\n  }, [isMobile, isTablet, isDesktop])\n\n  return (\n    muiTheme && (\n      <MuiThemeProvider theme={muiTheme}>\n        <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\n      </MuiThemeProvider>\n    )\n  )\n}\n\nTheme.propTypes = {\n  children: PropTypes.any\n}\n\nexport default Theme\n","import React, { useState } from 'react'\nimport style from './style'\nimport {\n  withStyles,\n  AppBar,\n  Toolbar,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Drawer\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport MailIcon from '@material-ui/icons/Mail'\nimport PropTypes from 'prop-types'\n\n/**\n@param {classes} Object: Used to define style classes. DOCUMENT YOUR CODE! :)\n*/\n\nconst DesktopNavbar = ({ classes }) => {\n  const [open, setOpen] = useState(false)\n\n  const sideList = () => (\n    <div\n      className={classes.list}\n      role='presentation'\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <MailIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  )\n\n  const toggleDrawer = isOpen => event => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return\n    }\n    setOpen(isOpen)\n  }\n\n  return (\n    <div>\n      <AppBar>\n        <Toolbar>\n          <IconButton onClick={toggleDrawer(true)}>\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={open} onClose={toggleDrawer(false)}>\n        {sideList()}\n      </Drawer>\n    </div>\n  )\n}\n\nDesktopNavbar.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default withStyles(style)(DesktopNavbar)\n","export default theme => ({\n  root: {\n    background: theme.overrides.White\n  },\n  list: {\n    width: 250\n  }\n})\n","import React from 'react'\nimport style from './style'\nimport { withStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\n/**\n@param {classes} Object: Used to define style classes. DOCUMENT YOUR CODE! :)\n*/\n\nconst MobileNavbar = ({ classes }) => {\n  return <div />\n}\n\nMobileNavbar.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default withStyles(style)(MobileNavbar)\n","export default theme => ({})\n","import React from 'react'\nimport { useTheme, useMediaQuery } from '@material-ui/core'\nimport DesktopNavbar from './DesktopNavbar'\nimport MobileNavbar from './MobileNavbar'\n\nconst ManagerTemplate = ({ children, ...props }) => {\n  const theme = useTheme()\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'))\n\n  return (\n    <>\n      {isDesktop ? (\n        <>\n          <DesktopNavbar {...props} />\n          {children}\n        </>\n      ) : (\n        <>\n          {children}\n          <MobileNavbar {...props} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ManagerTemplate\n","import React from 'react'\nimport styles from './styles'\nimport { withStyles, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nimport mainImage from 'assets/flower.png'\n\n/**\n *\n * @param {Boolean} shouldSpin Should the spinning animation be active?\n */\nconst PersonFeature = ({ classes, shouldSpin }) => {\n  return (\n    <div className={classes.container}>\n      <img src={mainImage} className={classes.main_image} alt='MAR' />\n      <Typography variant='h1'>\n        <b>MAR</b>\n      </Typography>\n    </div>\n  )\n}\n\nPersonFeature.propTypes = {\n  classes: PropTypes.object\n}\n\nPersonFeature.defaultProps = {\n  shouldSpin: false\n}\n\nexport default withStyles(styles)(PersonFeature)\n","export default theme => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n      placeItems: 'center',\n      margin: '2em'\n    },\n    main_image: {\n      width: '25em',\n      animation: props => {\n        console.log(props.shouldSpin)\n        return props.shouldSpin ? '$rotating 10s linear infinite' : ''\n      },\n      // animation: '$rotating 10s linear infinite',\n\n      marginRight: '2em'\n    },\n    '@keyframes rotating': {\n      from: {\n        transform: 'rotate(0deg)'\n      },\n      to: {\n        transform: 'rotate(360deg)'\n      }\n    }\n  }\n}\n","export { default as Theme } from './Theme'\nexport { default as Navbar } from './Navbar'\nexport { default as PersonFeature } from './PersonFeature'\n","module.exports = __webpack_public_path__ + \"static/media/flower.ce20aa53.png\";","var map = {\n\t\"./\": [\n\t\t28,\n\t\t9\n\t],\n\t\"./Home\": [\n\t\t37,\n\t\t9,\n\t\t0\n\t],\n\t\"./Home/\": [\n\t\t37,\n\t\t9,\n\t\t0\n\t],\n\t\"./Home/index\": [\n\t\t37,\n\t\t9,\n\t\t0\n\t],\n\t\"./Home/index.js\": [\n\t\t37,\n\t\t9,\n\t\t0\n\t],\n\t\"./Home/styles\": [\n\t\t58,\n\t\t7,\n\t\t1\n\t],\n\t\"./Home/styles.js\": [\n\t\t58,\n\t\t7,\n\t\t1\n\t],\n\t\"./index\": [\n\t\t28,\n\t\t9\n\t],\n\t\"./index.js\": [\n\t\t28,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 72;\nmodule.exports = webpackAsyncContext;","import React, { lazy, Suspense } from 'react'\nimport './App.css'\nimport pageSpecs from 'pages'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Theme, Navbar } from 'components'\n\nconst pages = pageSpecs.map(spec => ({\n  Component: lazy(() => import(`pages/${spec.name}`)),\n  spec: spec\n}))\n\nconst App = () => {\n  return (\n    <Router>\n      <Theme>\n        <Navbar />\n        <Suspense fallback={<div />}>\n          <Switch>\n            {pages.map(page => {\n              return (\n                <Route\n                  key={page.spec.name}\n                  component={page.Component}\n                  path={page.spec.path === '/home' ? '/' : page.spec.path}\n                  exact={!page.spec.isSubRouter}\n                />\n              )\n            })}\n          </Switch>\n        </Suspense>\n      </Theme>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}